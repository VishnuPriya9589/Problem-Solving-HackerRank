import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'miniMaxSum' function below.
     *
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static void miniMaxSum(List<Integer> arr) {
     ArrayList<Long> res = new ArrayList<>();
        long sum =0;
    for(int i = 0;i<arr.size();i++){
           sum =0;
        for(int j=0;j<arr.size();j++){
            if(i!=j){
                sum=sum+arr.get(j);
                
            }
        }
        res.add(sum);
       
    }
      System.out.print(Collections.min(res)+" "+Collections.max(res));
    //    System.out.println(Collections.max(res));

}

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        Result.miniMaxSum(arr);

        bufferedReader.close();
    }
}
